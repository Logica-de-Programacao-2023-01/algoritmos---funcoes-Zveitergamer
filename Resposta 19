package main

import (
	"errors"
	"fmt"
	"math"
)

// Função que verifica se um número é primo
func isPrime(number int) bool {
	if number < 2 {
		return false
	}

	sqrt := int(math.Sqrt(float64(number)))
	for i := 2; i <= sqrt; i++ {
		if number%i == 0 {
			return false
		}
	}

	return true
}

// Função que retorna um novo slice contendo todos os números primos menores ou iguais ao número informado
// Retorna um erro caso o número seja negativo
func getPrimes(number int) ([]int, error) {
	if number < 0 {
		return nil, errors.New("O número não pode ser negativo")
	}

	primes := make([]int, 0)
	for i := 2; i <= number; i++ {
		if isPrime(i) {
			primes = append(primes, i)
		}
	}

	return primes, nil
}

func main() {
	number := 20
	primes, err := getPrimes(number)

	if err != nil {
		fmt.Println("Erro:", err)
	} else {
		fmt.Println("Números primos menores ou iguais a", number, ":", primes)
	}

	negativeNumber := -10
	primes, err = getPrimes(negativeNumber)

	if err != nil {
		fmt.Println("Erro:", err)
	} else {
		fmt.Println("Números primos menores ou iguais a", negativeNumber, ":", primes)
	}
}
